version: '3.3' #the version of the docker compose

services:
  
  client-side: #name of the service
    container_name: client-side # name of the container
    build: ./client-side/ #w here its find the docker file that tell him how to build it
    command: npm start # the commentd we wont it to run after the build
    working_dir: /usr/src/app #what is the working dir
    ports: # port forwording
      - "3000:3000"
    volumes: #allow accsess to the file system of the docker container - allow live changing between the host and the container
      - ./client-side/:/usr/src/app # hostPath:containerPath
  
  backend:
    container_name: backend
    build: ./server/ #w here its find the docker file that tell him how to build it
    command: npm run develop # the commentd we wont it to run after the build
    working_dir: /usr/src/app #what is the working dir
    ports: # port forwording
      - "80:80"
    volumes: #allow accsess to the file system of the docker container - allow live changing between the host and the container
      - ./server/:/usr/src/app # hostPath:containerPath
    links:
      - postgres
      - redis
    environment:
      POSTGRES_URI: postgres://myUser:123456@postgres:5432/db
      REDIS_URI: redis
      PASSWORD_SALT: "myPasswordSalt"
  
  postgres:
    build: ./postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: myUser
      POSTGRES_PASSWORD: 123456
      POSTGRES_DB: db
      POSTGRES_HOST: postgres
  redis:
    image: redis
    ports:
      - 6379:6379
  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080