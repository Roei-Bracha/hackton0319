{"version":3,"sources":["Components/AppNavBar/UserAvatar/UserAvatar.jsx","Components/AppNavBar/Login/LoginModal/LoginModal.tsx","Components/AppNavBar/Login/Login.tsx","Components/AppNavBar/AppNavBar.tsx","reducers/main.ts","reducers/course.js","store/configureStore.ts","Components/BottomBar/BottomBar.jsx","config.js","Components/CoursePreview/CoursePreview.jsx","Components/myCourses/MyCourses.jsx","Components/filter/Filter.jsx","Components/Home/Home.jsx","Components/Profile/Profile.jsx","Components/CreateCourseForm/CreateCourseForm.jsx","Components/CourseITeach/CourseITeach.jsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["UserAvatar","react_default","a","createElement","Link","to","push","Avatar_default","src","LoginModal","_useState","useState","_useState2","Object","slicedToArray","mode","setMode","_useState3","_useState4","userName","setUserName","_useState5","_useState6","userPassword","setPassword","_useState7","_useState8","retypePassword","setRetypePassword","_useState9","_useState10","passwordErrorMode","setPasswordErrorMode","_useState11","_useState12","passwordErrorMessage","setPasswordErrorMessage","_useState13","_useState14","Tabs_default","value","variant","onChange","event","Tab_default","label","DialogTitle_default","DialogContent_default","FormControl_default","fullWidth","required","TextField_default","e","target","error","tempPassword","length","handlePasswordInput","type","helperText","DialogActions_default","Button_default","color","Login","open","setOpen","onClick","Dialog_default","onClose","className","connect","state","userId","main","props","AppBar_default","style","position","Toolbar_default","Typography_default","mainReducerDefultState","arguments","undefined","action","objectSpread","courses","reducers_course","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","BottomBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","redirect","changeMode","bind","assertThisInitialized","setState","Redirect","concat","index_es","showLabels","icon","icons_index_es","React","Component","graphQLApi","theme","createMuiTheme","direction","palette","primary","Teal","secondary","Purple","console","log","CoursePreview","joinToCourse","course_id","stopPropagation","username","registerOptions","method","headers","content-type","accept","body","JSON","stringify","query","fetch","then","response","json","openSuccesReg","alert","unSignToCourse","isRemoved","clickOpen","preState","isOpen","handleCloseSuccesReg","_this2","_this$state","_this$props$course","course","approved","description","photo_url","start_date","end_date","start_hour","end_hour","category","is_one_time","talmor_username","max_participants","min_participants","name","location","student","previous_knowledge","isSigned","Paper_default","backgroundColor","ExpandLess_default","ExpandMore_default","moment","format","userByUsername","first_name","last_name","marginRight","MyCourse","componentDidMount","getCoursesOption","results","data","registrations","map","reg","catch","err","Components_CoursePreview_CoursePreview","key","Filter","getCategoriesOption","categories","changeCategory","category_name","Home","changeCategoryFilter","categoryFilter","changeFilterOpen","isFilterOpen","filter_Filter","filter","Profile","updateState","obj","user","loading","options","match","params","users","students","component","bundle_default","display","alignItems","margin","width","height","count","bio","school","city","phone_number","email","CreateCourseForm","sendToServer","preventDefault","_this3","multiline","store","CouresITeach","aria-label","createStore","combineReducers","mainReducer","courseReducer","applyMiddleware","App","plugin","jssPreset","plugins","rtl","jss","create","generateClassName","createGenerateClassName","es","JssProvider_default","styles","CssBaseline_default","BrowserRouter","Components_AppNavBar_AppNavBar","Route","path","exact","CourseITeach","BottomBar_BottomBar","Boolean","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.36558824.chunk.js","sourcesContent":["import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nexport default function UserAvatar (){\r\n    return(\r\n        <Link to={\"/profile/harry\"} push={true}>\r\n            <Avatar src={\"https://images.pottermore.com/bxd3o8b291gf/3SQ3X2km8wkQIsQWa02yOY/25f258f21bdbe5f552a4419bb775f4f0/HarryPotter_WB_F4_HarryPotterMidshot_Promo_080615_Port.jpg\"} />\r\n        </Link>\r\n    )\r\n}","import React , {useState , useEffect} from 'react'\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nexport default function LoginModal() : JSX.Element{\r\n    let [mode , setMode] = useState< \"Login\" | \"Register\">(\"Login\")\r\n    const [userName , setUserName] = useState<string>(\"\")\r\n    const [userPassword , setPassword] = useState<string>(\"\")\r\n    const [retypePassword , setRetypePassword] = useState<string>(\"\")\r\n    const [passwordErrorMode , setPasswordErrorMode] = useState<boolean>(false)\r\n    const [passwordErrorMessage , setPasswordErrorMessage] = useState<string>(\"\")\r\n    const [email , setEmail] = useState<string>(\"\")\r\n    const handlePasswordInput = (e : React.ChangeEvent<HTMLInputElement | HTMLSelectElement | HTMLTextAreaElement>)=>{\r\n        const tempPassword = e.target.value\r\n        setPassword(tempPassword);\r\n        if(mode===\"Register\"){\r\n            if(tempPassword === \"\"){\r\n                setPasswordErrorMessage(\"\")\r\n                return setPasswordErrorMode(false)\r\n            } \r\n            else if (tempPassword.length<6){\r\n                setPasswordErrorMessage(\"the password should me at list 6 characther long\")\r\n                return setPasswordErrorMode(true)\r\n            }\r\n            else{\r\n                setPasswordErrorMessage(\"\")\r\n                return setPasswordErrorMode(false)\r\n            }\r\n        }\r\n    }\r\n    return(\r\n        <div>\r\n            <Tabs value={mode} variant={\"fullWidth\"} onChange={(event , value)=>{setMode(value)}}>\r\n                <Tab value=\"Login\" label=\"Login\"></Tab>\r\n                <Tab value=\"Register\" label=\"Register\"></Tab>\r\n            </Tabs>\r\n            <DialogTitle>{mode===\"Login\" ? \"Login\" : \"Register\"}</DialogTitle>\r\n            <DialogContent>\r\n                <FormControl fullWidth required={true}>\r\n                    <TextField \r\n                    label={\"Uesr name\"}\r\n                    value={userName}\r\n                    onChange={(e)=>{setUserName(e.target.value)}}\r\n                    ></TextField>\r\n                </FormControl>\r\n                <FormControl fullWidth required={true}>\r\n                    <TextField \r\n                    label={\"Password\"}\r\n                    value={userPassword}\r\n                    error={passwordErrorMode}\r\n                    onChange={(e)=>{handlePasswordInput(e)}}\r\n                    type={\"password\"}\r\n                    helperText={passwordErrorMessage}\r\n                    ></TextField>\r\n                </FormControl>\r\n                {mode === \"Register\" && <FormControl fullWidth required={true}>\r\n                    <TextField \r\n                    label={\"Re-type Password\"}\r\n                    value={retypePassword}\r\n                    error={(userPassword !== retypePassword && retypePassword.length!==0) }\r\n                    onChange={(e)=>{setRetypePassword(e.target.value)}}\r\n                    type={\"password\"}\r\n                    ></TextField>\r\n                </FormControl>}\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <Button color=\"primary\">{mode}</Button>\r\n                {/* <div className=\"g-signin2\" data-theme=\"dark\" /> */}\r\n            </DialogActions>\r\n        </div>\r\n    )\r\n}\r\n// TOFIX: the login with google dont work\r\n","import React , {useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport LoginModal from './LoginModal/LoginModal';\r\nexport default function Login () : JSX.Element{\r\n    const [open , setOpen] = useState(false)\r\n\r\n    return (\r\n        <div>\r\n            <Button onClick={()=>{setOpen(true)}} color=\"inherit\">Login / Regiter</Button>\r\n            {open &&\r\n                <Dialog open={open} onClose={()=>{setOpen(false)}} className={\"Modal\"}>\r\n                    <LoginModal/>\r\n                </Dialog>\r\n            }\r\n        </div>\r\n    )\r\n}","import './AppNavBar.scss'\r\nimport UserAvatar from './UserAvatar/UserAvatar'\r\nimport Login from './Login/Login'\r\nimport React from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport {connect} from 'react-redux'\r\nimport { store } from '../../store/configureStore';\r\n\r\ntype Props = StateProps // & DispatchProps & OwnProps \r\n\r\nfunction AppNavBar(props:Props){\r\n    return (\r\n        <AppBar style={{position:\"relative\"}} className={\"AppNavBar\"}>\r\n            <Toolbar className={\"Toolbar\"}>\r\n                <Typography variant=\"h6\" color=\"inherit\">\r\n                תלמור\r\n                </Typography>\r\n                {props.userId ? <UserAvatar/> : <Login/>}\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\ninterface StateProps {\r\n    userId: string | null\r\n}\r\n\r\nconst mapStateToProps = (state:store) : StateProps => ({\r\n    userId:state.main.userId\r\n})\r\n\r\nexport default connect(mapStateToProps)(AppNavBar)\r\n","export interface mainReducerState {\r\n    userId:string |null\r\n}\r\n\r\nconst mainReducerDefultState : mainReducerState = {\r\n    userId:\"harry\"\r\n}\r\n\r\nexport default (state = mainReducerDefultState , action:any) :mainReducerState=>{\r\n    switch(action.type){\r\n        case 'CHANGE_USER_NAME':\r\n            return{\r\n                ...state,\r\n                userId:action.userId\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\n","const mainReducerDefultState  = {\r\n    courses :null\r\n}\r\n\r\nexport default (state = mainReducerDefultState , action) =>{\r\n    switch(action.type){\r\n        case 'COURSES_INIT':\r\n            return {\r\n                ...state,\r\n                courses : action.courses\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport mainReducer , {mainReducerState} from '../reducers/main'\r\nimport courseReducer from '../reducers/course'\r\n\r\nconst composeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nexport default () => {\r\n    const store = createStore(\r\n        combineReducers({\r\n            main:mainReducer,\r\n            course:courseReducer\r\n        }),\r\n        composeEnhancers(applyMiddleware())\r\n    );\r\n    return store;\r\n};\r\n\r\nexport interface store {\r\n    main:mainReducerState\r\n}","import React from \"react\"\r\nimport { BottomNavigation , BottomNavigationAction } from \"@material-ui/core\";\r\nimport {Search, School,AccountCircle} from \"@material-ui/icons\"\r\nimport { Redirect } from \"react-router\";\r\nexport default class BottomBar extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            value:\"search\",\r\n            redirect:false\r\n        }\r\n        this.changeMode = this.changeMode.bind(this)\r\n    }\r\n    changeMode (event , value) {\r\n        this.setState({value,redirect:true})\r\n    }\r\n    render(){\r\n        return(\r\n            <div className=\"bottomBar\">\r\n                {this.state.redirect && <Redirect push to={`/${this.state.value}`}/>}\r\n                <BottomNavigation value={this.state.value} onChange={this.changeMode} showLabels>\r\n                    <BottomNavigationAction label=\"אני מלמד\" icon={<AccountCircle />} value={\"iTeach\"} />\r\n                    <BottomNavigationAction label=\"חפש קורס\" icon={<Search />} value={\"search\"} />\r\n                    <BottomNavigationAction label=\"הקורסים שלי\" icon={<School />} value={\"myCourses\"} />\r\n                </BottomNavigation>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import Teal from '@material-ui/core/colors/teal';\r\nimport Purple from '@material-ui/core/colors/purple';\r\nimport {createMuiTheme,} from '@material-ui/core'\r\n\r\n\r\nexport const graphQLApi = 'https://grpahql-talmor.herokuapp.com/v1alpha1/graphql'\r\nexport const theme = createMuiTheme({\r\n    direction:\"rtl\",\r\n    palette: {\r\n      primary: Teal,\r\n      secondary: Purple\r\n    },\r\n  })\r\nconsole.log(theme)\r\n","import React, { Component } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport ExpandLessIcon from '@material-ui/icons/ExpandLess';\r\nimport Button from '@material-ui/core/Button';\r\nimport {School} from \"@material-ui/icons\"\r\nimport {connect} from 'react-redux'\r\nimport {graphQLApi} from '../../config'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport {Redirect} from 'react-router'\r\n\r\nimport moment from 'moment'\r\n\r\nimport {theme} from '../../config'\r\n\r\nimport \"./coursePreview.scss\";\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass CoursePreview extends Component {\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        isOpen:false,\r\n        isRemoved : false\r\n      }\r\n      \r\n    }\r\n    joinToCourse = (e,course_id)=>{\r\n      e.stopPropagation();\r\n      console.log(course_id)\r\n      console.log(this.props.username)\r\n      const registerOptions = {\r\n        method:'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          query:`mutation{insert_registrations(objects:{course_id:\"${course_id}\",has_completed:false,talmor_id:\"${this.props.username}\"}){affected_rows}}`\r\n        })\r\n      }\r\n      \r\n      fetch(graphQLApi,registerOptions)\r\n      .then((response)=>response.json())\r\n      .then(()=>{this.setState({openSuccesReg : true})\r\n              alert('נרשמת בהצלחה!')\r\n    })\r\n    }\r\n    unSignToCourse = (e,course_id)=>{\r\n      e.stopPropagation();\r\n      const registerOptions = {\r\n        method:'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          query:`mutation{delete_registrations(where:{_and:{talmor_id:{_eq:\"${this.props.username}\"},course_id:{_eq:\"${course_id}\"}}}){affected_rows}}`\r\n        })\r\n\r\n      }\r\n      \r\n      fetch(graphQLApi,registerOptions)\r\n      .then((response)=>response.json())\r\n      .then(()=>{this.setState({openSuccesReg : true,isRemoved:true})\r\n              alert('ביטול ההשתתפות נרשם במערכת')\r\n    })\r\n    }\r\n    clickOpen = ()=>this.setState((preState)=>({isOpen:!preState.isOpen})) \r\n    handleCloseSuccesReg = ()=>{this.setState({openSuccesReg : false})}\r\n    render() {\r\n      const {isOpen,openSuccesReg,isRemoved} = this.state\r\n      const {approved,\r\n        course_id,\r\n        description,\r\n        photo_url,\r\n        start_date,\r\n        end_date,\r\n        start_hour,\r\n        end_hour,\r\n        is_one_time,\r\n        talmor_username,\r\n        max_participants,\r\n        min_participants,\r\n        category,\r\n        name,\r\n        location,\r\n        student,\r\n        previous_knowledge} = this.props.course\r\n      const {isSigned} = this.props\r\n      return (\r\n          <Paper className='coursePaper' onClick={this.clickOpen}>\r\n            \r\n              <div className='coursePreview'>\r\n                <div className='courseHeader' style={{backgroundColor:theme.palette.primary[200]}}>\r\n                  <div className='coursePhotoWrap'>\r\n                    <img src={photo_url} className='coursePhoto'/>\r\n                  </div>\r\n                  {isOpen ? <ExpandLessIcon className='openIcon'  /> :  <ExpandMoreIcon  className='openIcon'  /> }                 \r\n                </div>\r\n                <div className='courseLabel'>\r\n                    <span className='courseName'>{`${name} (${category})`}</span>\r\n                  </div>\r\n                <div className='row'>\r\n                  <span className='rowLabel'>תאריכים:</span><span>{`${moment(start_date).format('DD/MM/YYYY')}-${moment(end_date).format('DD/MM/YYYY')}`}</span>\r\n                </div>\r\n                <div className='row'>\r\n                  <span className='rowLabel'>מיקום:</span><span>{location.name}</span>\r\n                </div>\r\n                <div className='row'>\r\n                  <span className='rowLabel'>מורה:</span><Link push to={`/profile/${student.username}`}><span>{`${student.userByUsername.first_name} ${student.userByUsername.last_name}`}</span></Link>\r\n                </div>\r\n                {isOpen ? \r\n                <div>\r\n\r\n                  <div className='row'>\r\n                    <span className='rowLabel'>תיאור קורס:</span><span>{description}</span> \r\n                  </div>\r\n                  <div className='row'>\r\n                    <span className='rowLabel'>שעות:</span><span>{`${start_hour}-${end_hour}`}</span> \r\n                  </div>\r\n                    <div className='row'>\r\n                  <span className='rowLabel'>ידע קודם דרוש:</span><span>{previous_knowledge}</span> \r\n                  </div>\r\n                  <div className='footer'>\r\n                  {isSigned ? \r\n                    <Button variant=\"contained\" color=\"secondary\" className='joinButton' onClick={(e)=>this.unSignToCourse(e,course_id)}>\r\n                    <span> בטל השתתפות בקורס</span> \r\n                    <School style={{marginRight:'8px'}} />\r\n                  </Button> :<Button variant=\"contained\" color=\"primary\" className='joinButton' onClick={(e)=>this.joinToCourse(e,course_id)}>\r\n                    <span> הצטרף לקורס</span> \r\n                    <School style={{marginRight:'8px'}} />\r\n                  </Button>\r\n                  \r\n                }\r\n                  </div>\r\n                  {isRemoved? <Redirect to='/search' push/> : null}\r\n                  <div className='row'>\r\n                  </div>\r\n                </div> :null\r\n                  }\r\n                  {/* <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={openSuccesReg}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleCloseSuccesReg}\r\n        ></Snackbar> */}\r\n              </div>\r\n            </Paper>\r\n            \r\n       );\r\n    }\r\n  }\r\n  const mapStateToProps = (state) => ({\r\n    username:state.main.userId\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(CoursePreview)\r\n","import React, { Component } from 'react';\r\nimport {graphQLApi} from '../../config'\r\nimport CoursePreview from '../CoursePreview/CoursePreview.jsx' \r\nimport {connect} from 'react-redux'\r\n\r\nimport './myCourses.scss'\r\n\r\n\r\nclass MyCourse extends Component {\r\n    constructor (props) {\r\n        super(props)\r\n        this.state= {\r\n            courses:[]\r\n        }\r\n    }\r\n    componentDidMount = ()=>{\r\n        const getCoursesOption = {\r\n            method:'POST',\r\n            headers: {\r\n              'content-type': 'application/json',\r\n              'accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n              query: `query{registrations(where:{talmor_id:{_eq:\"${this.props.username}\"}}){course{approved name course_id description start_date end_date start_hour end_hour is_one_time photo_url talmor_username student{username userByUsername{first_name last_name}bio school{name}}max_participants min_participants previous_knowledge category location{name address description}}}}`\r\n            })\r\n          }\r\n          fetch(graphQLApi,getCoursesOption)\r\n        .then ((response)=>{\r\n            return response.json()\r\n        })\r\n        .then((results)=>{\r\n            console.log(results)\r\n            const courses = results.data.registrations.map((reg)=>reg.course)\r\n            this.setState ({courses})\r\n        }).catch((err)=>{\r\n            console.error(err)\r\n        })\r\n    }\r\n    render () {\r\n        const {courses} = this.state\r\n        return (\r\n            <div className='myCourses'>\r\n                {courses ? courses.map((course)=>{\r\n                    return <CoursePreview \r\n                    key={course.course_id}\r\n                    course={course}\r\n                    isSigned={true}/>\r\n                }): null}\r\n            </div>)\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    username:state.main.userId\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(MyCourse)\r\n","import React, { Component } from 'react';\r\n\r\nimport moment from 'moment'\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport {graphQLApi} from '../../config'\r\n\r\n\r\nimport './filter.scss'\r\nconst styles = (theme)=>({\r\n    darawer:{\r\n        zIndex:1000\r\n    }\r\n})\r\nclass Filter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            categories: []\r\n        }\r\n    }\r\n    componentDidMount = ()=>{\r\n        const getCategoriesOption = {\r\n          method:'POST',\r\n          headers: {\r\n            'content-type': 'application/json',\r\n            'accept': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n            query: `query{categories{category_name}}`\r\n          })\r\n        }\r\n        fetch(graphQLApi,getCategoriesOption)\r\n        .then ((response)=>{\r\n          return response.json()\r\n        })\r\n        .then((results)=>{\r\n          const {categories} = results.data\r\n          this.setState ({categories})\r\n        }).catch((err)=>{\r\n          console.error(err)\r\n        })\r\n      }\r\n    \r\n    render() {\r\n        const {categories} = this.state\r\n        const {changeCategory} = this.props\r\n        return (\r\n            <div className='filter'>\r\n                <Paper>\r\n                    <div className='filterContent'>\r\n                        <div className='row'>\r\n                            <span className='rowLabel'>קטגוריה:</span><select onChange={(e)=>changeCategory(e.target.value)}>{categories.map((category)=><option key={category.category_name} value={category.category_name}>{category.category_name}</option>)}</select> \r\n                        </div>\r\n                    </div>\r\n                    {/* <div className='courseLabel'>\r\n                        <span className='courseName'>{`${'name'} (${'category'})`}</span>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <span className='rowLabel'>תאריכים:</span><span>{`${moment().format('DD/MM/YYYY')}-${moment().format('DD/MM/YYYY')}`}</span>\r\n                    </div>\r\n                    <div className='row'>\r\n                        <span className='rowLabel'>מיקום:</span><span>{'location.name'}</span>\r\n                    </div>\r\n                    <div className='row'>\r\n                    </div>\r\n\r\n                <div className='row'>\r\n                    <span className='rowLabel'>תיאור קורס:</span><span>{'description'}</span> \r\n                </div>\r\n                <div className='row'>\r\n                    <span className='rowLabel'>שעות:</span><span>{`${'start_hour'}-${'end_hour'}`}</span> \r\n                </div>\r\n                    <div className='row'>\r\n                <span className='rowLabel'>ידע קודם דרוש:</span><span>{'previous_knowledge'}</span> \r\n                </div> */}\r\n                </Paper>\r\n              \r\n          </div>)\r\n    }\r\n}\r\n\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport CoursePreview from '../CoursePreview/CoursePreview.jsx' \r\nimport {graphQLApi} from '../../config'\r\nimport Filter from '../filter/Filter.jsx'\r\n\r\nimport { FilterList } from '@material-ui/icons';\r\nimport  './Home.scss'\r\n\r\nclass Home extends Component {\r\n    constructor (props) {\r\n      super(props)\r\n      this.state = {\r\n        isFilterOpen: false\r\n      }\r\n    }\r\n    componentDidMount = ()=>{\r\n      const getCoursesOption = {\r\n        method:'POST',\r\n        headers: {\r\n          'content-type': 'application/json',\r\n          'accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n          query: `query{courses{approved name course_id description start_date end_date start_hour end_hour is_one_time photo_url talmor_username student{username userByUsername{first_name last_name}bio school{name}}max_participants min_participants previous_knowledge category location{name address description}}}`\r\n        })\r\n      }\r\n      fetch(graphQLApi,getCoursesOption)\r\n      .then ((response)=>{\r\n        return response.json()\r\n      })\r\n      .then((results)=>{\r\n        const {courses} = results.data\r\n        this.setState ({courses})\r\n      }).catch((err)=>{\r\n        console.error(err)\r\n      })\r\n    }\r\n    changeCategoryFilter = (categoryFilter)=>{\r\n      console.log(categoryFilter)\r\n      this.setState ({\r\n        categoryFilter\r\n      })\r\n    }\r\n    changeFilterOpen = ()=>{\r\n      this.setState((preState)=>({\r\n        isFilterOpen:!preState.isFilterOpen\r\n      }))\r\n    }\r\n    render() {\r\n      const {courses,categoryFilter,isFilterOpen} = this.state\r\n      return (\r\n      <div className='homeWithFilter'>\r\n        {isFilterOpen ?<Filter changeCategory={this.changeCategoryFilter} onClick={this.changeFilterOpen}/>: <FilterList onClick={this.changeFilterOpen}/>}\r\n        <div className='home'>\r\n          <span>קורסים שאמורים להפתח בבית הספר שלך:</span>\r\n           {courses ? courses\r\n           .filter((course)=>{\r\n            return !categoryFilter||course.category ===categoryFilter\r\n           })\r\n           .map((course)=>{\r\n            return <CoursePreview \r\n              key={course.course_id}\r\n              course={course}\r\n              isSigned={false}/>\r\n          }): null}\r\n          \r\n        </div>\r\n      </div>\r\n         );\r\n    }\r\n  }\r\n\r\n\r\n\r\n  export default Home;\r\n","import React from \"react\"\r\nimport Paper from \"@material-ui/core/Paper\"\r\nimport Typography from \"@material-ui/core/Typography\"\r\nimport \"./Profile.scss\"\r\nimport Skeleton from \"react-loading-skeleton\"\r\nimport {graphQLApi} from '../../config'\r\nimport { Avatar } from \"@material-ui/core\";\r\n\r\n\r\nclass Profile extends React.Component{\r\n    constructor(props){\r\n        super(props)\r\n        this.state = {\r\n            loading:true,\r\n            user:{\r\n                username:\"loading\"\r\n            }\r\n        }\r\n    }\r\n    updateState = (obj)=>{\r\n        this.setState({user:{...obj}})\r\n    }\r\n    componentDidMount(){\r\n        const options = {\r\n        method:'POST',\r\n        headers: {\r\n            'content-type': 'application/json',\r\n            'accept': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            query: `query{users(where:{username:{_eq:\"${this.props.match.params.username}\"}}){first_name last_name email phone_number phone_number photo_url school{name city}}students(where:{username:{_eq:\"${this.props.match.params.username}\"}}){city interests{category_name}bio}}`\r\n        })\r\n        }\r\n        fetch(graphQLApi,options)\r\n      .then ((results)=>{\r\n        return results.json()\r\n      })\r\n      .then((data)=>{\r\n        this.setState({loading:false,user:{\r\n            ...data.data.users[0],\r\n            ...data.data.students[0]\r\n        }})\r\n      }).catch((err)=>{\r\n        console.error(err)\r\n      })\r\n    }\r\n    render(){\r\n        console.log(this.props)\r\n        return(\r\n            <div>\r\n                <Paper className=\"Profile\">\r\n                    <Typography variant=\"h5\" component=\"h3\" >\r\n                        {this.state.loading ?\r\n                        <Skeleton /> : <span style={{display:\"flex\",alignItems:\"center\"}}><Avatar style={{margin:\"5px\",width:60,height:60}}src={this.state.user.photo_url}/> {this.state.user.first_name} {this.state.user.last_name} </span>}\r\n                    </Typography>\r\n                    <br/>\r\n                    {this.state.loading ?\r\n                        <p  > <Skeleton count={8} /> </p>:\r\n                        <div>\r\n                        <Typography><b>קצת על עצמי:</b></Typography>\r\n                        <Typography>{this.state.user.bio}</Typography>\r\n                        <Typography><b>בית ספר: </b>{this.state.user.school.name}</Typography>\r\n                        <Typography><b> עיר: </b>{this.state.user.city}</Typography>\r\n                        <Typography><b> מספר טלפון: </b>{this.state.user.phone_number}</Typography>\r\n                        <Typography><b>אימייל: </b>{this.state.user.email}</Typography>\r\n\r\n                        \r\n                        </div>\r\n                    }\r\n                </Paper>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default Profile","import React, { Component } from 'react'\r\nimport \"./CreateCourseForm.scss\"\r\nimport { Typography, Select, MenuItem, Button } from '@material-ui/core';\r\nimport {connect} from \"react-redux\"\r\nimport { TextField } from '@material-ui/core';\r\nimport {graphQLApi} from '../../config'\r\nimport { Save } from '@material-ui/icons';\r\nimport moment from \"moment\"\r\n\r\nclass CreateCourseForm extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        this.state={\r\n            category:\"\",\r\n            description:\"\",\r\n            start_date:\"\",\r\n            end_date:\"\",\r\n            start_hour:\"\",\r\n            end_hour:\"\",\r\n            talmor_username:this.props.talmor_username,\r\n            name:\"\",\r\n            categories:[],\r\n        }\r\n    }\r\n    componentDidMount(){\r\n        const options = {\r\n            method:'POST',\r\n            headers: {\r\n                'content-type': 'application/json',\r\n                'accept': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                query: `query{categories{category_name}}`\r\n            })\r\n            }\r\n            fetch(graphQLApi,options)\r\n          .then ((results)=>{\r\n            return results.json()\r\n          })\r\n          .then((data)=>{\r\n            this.setState({categories:data.data.categories})\r\n          }).catch((err)=>{\r\n            console.error(err)\r\n          })\r\n        }\r\n        sendToServer = (e)=>{\r\n            e.preventDefault()\r\n            console.log(this.state)\r\n            const options = {\r\n                method:'POST',\r\n                headers: {\r\n                    'content-type': 'application/json',\r\n                    'accept': 'application/json'\r\n                },\r\n                body: JSON.stringify({\r\n                    query: `mutation{insert_courses(objects:{category: \"${this.state.category}\",description: \"${this.state.description}\",end_date: \"${this.state.end_date}\",start_date: \"${this.state.start_date}\",is_one_time: true,max_participants: 10,location_id:\"2e681815-d21d-471f-89c2-d4e389e24097\",approved:true,talmor_username:\"${this.props.talmor_username}\",name:\"${this.state.name}\",photo_url:\"aaaaa\",start_hour:\"${this.state.start_hour}:00\",end_hour:\"${this.state.end_hour}:00\"}){affected_rows}}`\r\n                })\r\n                }\r\n                fetch(graphQLApi,options)\r\n              .then ((results)=>{\r\n                return results.json()\r\n              })\r\n              .then((data)=>{\r\n                console.log(data)\r\n              }).catch((err)=>{\r\n                console.error(err)\r\n              })\r\n        }\r\n    render () {\r\n        return (\r\n            <div className=\"CreateCourseForm\">\r\n                <Typography variant=\"h5\" component=\"h3\">פתיחת קורס חדש</Typography>\r\n                <form>\r\n                    <TextField label=\"שם הקורס\" value={this.state.name} onChange={(e)=>{this.setState({name:e.target.value})}}></TextField>\r\n                    <TextField label=\"תיאור\" value={this.state.description} multiline onChange={(e)=>{this.setState({description:e.target.value})}}></TextField>\r\n                    <div className=\"formRow\"><span>תאריך התחלה:</span><TextField  value={this.state.start_date} type={\"date\"} onChange={(e)=>{this.setState({start_date:e.target.value})}}></TextField></div>\r\n                    <div className=\"formRow\"><span>תאריך סיום:</span><TextField value={this.state.end_date} type={\"date\"} onChange={(e)=>{this.setState({end_date:e.target.value})}}></TextField></div>\r\n                    <div className=\"formRow\"><span>שעת התחלה:</span><TextField value={this.state.start_hour} type={\"time\"} onChange={(e)=>{this.setState({start_hour:e.target.value})}}></TextField></div>\r\n                    <div className=\"formRow\"><span>שעת סיום:</span><TextField value={this.state.end_hour} type={\"time\"} onChange={(e)=>{this.setState({end_hour:e.target.value})}}></TextField></div>\r\n                    <Select value={this.state.category} onChange={(e)=>{this.setState({category:e.target.value})}}>\r\n                    {this.state.categories.map((category)=>{\r\n                        return(<MenuItem key={category.category_name} value={category.category_name} style={{direction:\"rtl\"}}>{category.category_name}</MenuItem>)\r\n                    })}\r\n                    </Select>\r\n\r\n                    <div className={\"ButtonDiv\"}>\r\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.sendToServer} >שמור  <Save/></Button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps =(store)=> ({\r\n    talmor_username:store.main.userId\r\n})\r\n\r\nexport default connect(mapStateToProps)(CreateCourseForm)","import React, { Component } from 'react'\r\nimport { Fab } from '@material-ui/core';\r\nimport {Add} from \"@material-ui/icons\"\r\nimport { Link } from 'react-router-dom';\r\nimport \"./CouresITeach.scss\"\r\nclass CouresITeach extends Component {\r\n    render () {\r\n        return (\r\n            <div className={\"CouresITeach\"}>\r\n                <div className={\"floatingButton\"}>\r\n                    <Link to=\"/createCourse\" push={true}>\r\n                    <Fab color=\"primary\" aria-label=\"Add\">\r\n                        <Add/>\r\n                    </Fab>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CouresITeach","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\r\nimport { Provider } from 'react-redux';\r\nimport AppNavBar from './Components/AppNavBar/AppNavBar'\r\nimport configureStore from './store/configureStore'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport BottomBar from \"./Components/BottomBar/BottomBar\"\r\nimport './App.scss';\r\nimport { create } from 'jss';\r\nimport rtl from 'jss-rtl';\r\nimport { createGenerateClassName, jssPreset , MuiThemeProvider } from '@material-ui/core/styles';\r\nimport {theme} from './config'\r\nimport JssProvider from 'react-jss/lib/JssProvider';\r\nimport MyCourse from './Components/myCourses/MyCourses'\r\n\r\nimport Home from './Components/Home/Home.jsx'\r\nimport Profile from './Components/Profile/Profile';\r\nimport CreateCourseForm from './Components/CreateCourseForm/CreateCourseForm';\r\nimport CourseITeach from './Components/CourseITeach/CourseITeach';\r\n\r\nconst store = configureStore()\r\nclass App extends Component {\r\n  plugin:any = [...jssPreset().plugins, rtl()]\r\n  render() {\r\n    const jss = create({ plugins: this.plugin });\r\n    const generateClassName = createGenerateClassName();\r\n    return (\r\n      <Provider store={store}>\r\n        <JssProvider jss={jss} generateClassName={generateClassName}>\r\n        <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n        <Router>\r\n          <div className='allPage'>\r\n            <div className='header'>\r\n              <AppNavBar/>\r\n            </div>\r\n            <div className='body'>\r\n              <div className=\"RouterDiv\">\r\n              <Route path='/' exact component={Home}></Route>\r\n              <Route path='/search' exact component={Home}></Route>\r\n              <Route path='/profile/:username' component={Profile}></Route>\r\n              <Route path='/createcourse' component={CreateCourseForm}></Route>\r\n              <Route path='/iteach' component={CourseITeach}></Route>\r\n              <Route path='/myCourses' component={MyCourse}></Route>\r\n              </div>\r\n              <BottomBar/>\r\n            </div>\r\n          </div>\r\n        </Router>\r\n        </MuiThemeProvider>\r\n        </JssProvider>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}